name: glib-publisher
run-name: Publishing glib library
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "code/glib/src/main/resources/version"
env:
  GRADLE_JAVA_VERSION: 20
  JAVA_VERSION: 21
  GRADLE_VERSION: 8.3
  PROJECT_NAME: glib
jobs:
  all-in-one:
    permissions:
      packages: write # Packages.
      id-token: write # Pages.
      pages: write    # Pages.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Snapshot test
        working-directory: code
        run: |
          version=$(<"${{ env.PROJECT_NAME }}/src/main/resources/version")
          if [[ "${version}" == *"-SNAPSHOT" ]]; then
            echo "'main' doesn't release snapshots!"
            exit 1
          fi

      - name: Setup Java for Gradle
        uses: oracle-actions/setup-java@v1
        with:
          release: ${{ env.GRADLE_JAVA_VERSION }}

      - name: Setup Java
        uses: oracle-actions/setup-java@v1
        with:
          release: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Test
        working-directory: code
        run: gradle :${{ env.PROJECT_NAME }}:test

      - name: Build
        working-directory: code
        run: gradle :${{ env.PROJECT_NAME }}:build

      - name: Recreate GPG keys
        run: echo "${{ secrets.GPG_KEYS_BASE64 }}" | base64 -d > "${{ github.workspace }}/gpg-keys"

      - name: Publish
        working-directory: code
        run: |
          gradle \
            "-Pgpr.username=${{ github.actor }}" \
            "-Pgpr.token=${{ secrets.GITHUB_TOKEN }}" \
            "-Psigning.keyId=${{ secrets.GPG_KEY_ID }}" \
            "-Psigning.password=${{ secrets.GPG_PASSWORD }}" \
            "-Psigning.secretKeyRingFile=${{ github.workspace }}/gpg-keys" \
            :${{ env.PROJECT_NAME }}:publish

      - name: Clean up old packages
        uses: actions/delete-package-versions@v4
        with:
          package-name: com.glitchybyte.glib.glib
          package-type: maven
          min-versions-to-keep: 10

      - name: Replace fonts in javadoc
        working-directory: code
        run: |
          sed -i -E \
            -e "s|^@import url\(.*\);|@import url('https://fonts.googleapis.com/css2?family=Exo+2\&family=JetBrains+Mono\&display=swap');|" \
            -e "s/'DejaVu (Sans|Serif)'/'Exo 2'/" \
            -e "s/'DejaVu Sans Mono'/'JetBrains Mono'/" \
            "${{ env.PROJECT_NAME }}/build/docs/javadoc/stylesheet.css"

      - name: Prepare Pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: code/${{ env.PROJECT_NAME }}/build/docs/javadoc

      - name: Deploy Pages
        uses: actions/deploy-pages@v2
