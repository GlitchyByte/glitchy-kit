name: glib-snapshot-publisher
run-name: Publishing a snapshot of glib library
on:
  workflow_dispatch:
env:
  JAVA_VERSION: 20
  GRADLE_VERSION: 8.3
  PROJECT_NAME: glib
jobs:
  all-in-one:
    permissions:
      packages: write # Packages.
      id-token: write # Pages.
      pages: write    # Pages.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: dev

      - name: Snapshot test
        working-directory: code
        run: |
          version=$(<"${{ env.PROJECT_NAME }}/src/main/resources/version")
          if [[ "${version}" != *"-SNAPSHOT" ]]; then
            echo "'dev' only releases snapshots!"
            exit 1
          fi

      - name: Setup Java
        uses: oracle-actions/setup-java@v1
        with:
          release: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Build
        working-directory: code
        run: gradle :${{ env.PROJECT_NAME }}:build

      - name: Test
        working-directory: code
        run: gradle :${{ env.PROJECT_NAME }}:test

      - name: Recreate GPG keys
        run: echo "${{ secrets.GPG_KEYS_BASE64 }}" | base64 -d > "${{ github.workspace }}/gpg-keys"

      - name: Publish
        working-directory: code
        run: |
          gradle \
            "-Pgpr.username=${{ github.actor }}" \
            "-Pgpr.token=${{ secrets.GITHUB_TOKEN }}" \
            "-Psigning.keyId=${{ secrets.GPG_KEY_ID }}" \
            "-Psigning.password=${{ secrets.GPG_PASSWORD }}" \
            "-Psigning.secretKeyRingFile=${{ github.workspace }}/gpg-keys" \
            :${{ env.PROJECT_NAME }}:publish

      - name: Clean up old snapshots
        uses: actions/delete-package-versions@v4
        with:
          package-name: com.glitchybyte.glib.glib
          package-type: maven
          min-versions-to-keep: 1
          delete-only-pre-release-versions: "true"
